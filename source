-- Custom GUI Library
-- Based on your original GUI design

local Library = {}
Library.__index = Library

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

Library.Flags = {}
Library.Connections = {}
Library.Pages = {}
Library.CurrentPage = nil
Library.GUI = nil

-- Utility Functions
function Library:CreateConnection(signal, callback)
    local connection = signal:Connect(callback)
    table.insert(self.Connections, connection)
    return connection
end

function Library:Tween(object, properties, duration, easingStyle, easingDirection)
    local tweenInfo = TweenInfo.new(duration or 0.3, easingStyle or Enum.EasingStyle.Quad, easingDirection or Enum.EasingDirection.Out)
    return TweenService:Create(object, tweenInfo, properties)
end

-- Main Library Functions
function Library:CreateWindow(config)
    local Window = {}
    Window.Name = config.Name or "o bee city"
    Window.Pages = {}
    Window.CurrentPage = nil
    
    -- Create main GUI structure (keeping your exact design)
    local coresploit = Instance.new("ScreenGui")
    local Background = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local Topbar = Instance.new("Frame")
    local TabsHolder = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local Roundingfiller = Instance.new("Frame")
    local UICorner_2 = Instance.new("UICorner")
    local Frame = Instance.new("Frame")
    local UnderBar = Instance.new("Frame")
    local GameName = Instance.new("TextLabel")
    local UserStatus = Instance.new("TextLabel")
    local MenuGlow = Instance.new("ImageLabel")
    local UIListLayout = Instance.new("UIListLayout")

    -- Properties (keeping your exact styling)
    coresploit.Name = "coresploit"
    coresploit.Parent = LocalPlayer:WaitForChild("PlayerGui")
    coresploit.Enabled = true
    coresploit.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Background.Name = "Background"
    Background.Parent = coresploit
    Background.BackgroundColor3 = Color3.fromRGB(17, 16, 24)
    Background.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Background.BorderSizePixel = 0
    Background.Position = UDim2.new(0.5, -235, 0.5, -290)
    Background.Size = UDim2.new(0, 470, 0, 581)

    UICorner.CornerRadius = UDim.new(0, 3)
    UICorner.Parent = Background

    Topbar.Name = "Topbar"
    Topbar.Parent = Background
    Topbar.BackgroundColor3 = Color3.fromRGB(28, 28, 33)
    Topbar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Topbar.BorderSizePixel = 0
    Topbar.Position = UDim2.new(0, 0, 0.0103270225, 0)
    Topbar.Size = UDim2.new(0, 470, 0, 30)

    TabsHolder.Name = "TabsHolder"
    TabsHolder.Parent = Topbar
    TabsHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabsHolder.BackgroundTransparency = 1.000
    TabsHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TabsHolder.BorderSizePixel = 0
    TabsHolder.Position = UDim2.new(0.506383002, 0, -0.17647095, 0)
    TabsHolder.Size = UDim2.new(0, 232, 0, 36)

    UIListLayout.Parent = TabsHolder
    UIListLayout.FillDirection = Enum.FillDirection.Horizontal
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 8)

    TextLabel.Parent = Topbar
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(0.0245389901, 0, -0.200000003, 0)
    TextLabel.Size = UDim2.new(0, 120, 0, 32)
    TextLabel.Font = Enum.Font.SourceSansBold
    TextLabel.Text = Window.Name
    TextLabel.TextColor3 = Color3.fromRGB(66, 255, 249)
    TextLabel.TextSize = 14.000
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left

    Roundingfiller.Name = "Roundingfiller"
    Roundingfiller.Parent = Topbar
    Roundingfiller.BackgroundColor3 = Color3.fromRGB(28, 28, 33)
    Roundingfiller.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Roundingfiller.BorderSizePixel = 0
    Roundingfiller.ClipsDescendants = true
    Roundingfiller.Position = UDim2.new(0, 0, -0.209804028, 0)
    Roundingfiller.Size = UDim2.new(0, 470, 0, 7)
    Roundingfiller.ZIndex = 0

    UICorner_2.CornerRadius = UDim.new(0, 3)
    UICorner_2.Parent = Roundingfiller

    Frame.Parent = Topbar
    Frame.BackgroundColor3 = Color3.fromRGB(36, 36, 43)
    Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0, 0, 0.95686239, 0)
    Frame.Size = UDim2.new(0, 469, 0, 1)

    UnderBar.Name = "UnderBar"
    UnderBar.Parent = Background
    UnderBar.BackgroundColor3 = Color3.fromRGB(28, 28, 33)
    UnderBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UnderBar.BorderSizePixel = 0
    UnderBar.Position = UDim2.new(0.00212765951, 0, 0.963855445, 0)
    UnderBar.Size = UDim2.new(0, 468, 0, 21)

    GameName.Name = "GameName"
    GameName.Parent = UnderBar
    GameName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    GameName.BackgroundTransparency = 1.000
    GameName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    GameName.BorderSizePixel = 0
    GameName.Size = UDim2.new(0, 150, 0, 21)
    GameName.Font = Enum.Font.SourceSansSemibold
    GameName.Text = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    GameName.TextColor3 = Color3.fromRGB(66, 255, 249)
    GameName.TextSize = 14.000

    UserStatus.Name = "UserStatus"
    UserStatus.Parent = UnderBar
    UserStatus.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UserStatus.BackgroundTransparency = 1.000
    UserStatus.BorderColor3 = Color3.fromRGB(0, 0, 0)
    UserStatus.BorderSizePixel = 0
    UserStatus.Position = UDim2.new(0.786324799, 0, 0, 0)
    UserStatus.Size = UDim2.new(0, 94, 0, 21)
    UserStatus.Font = Enum.Font.SourceSansSemibold
    UserStatus.Text = "User"
    UserStatus.TextColor3 = Color3.fromRGB(66, 255, 249)
    UserStatus.TextSize = 14.000
    UserStatus.TextXAlignment = Enum.TextXAlignment.Right

    MenuGlow.Name = "MenuGlow"
    MenuGlow.Parent = Background
    MenuGlow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    MenuGlow.BackgroundTransparency = 1.000
    MenuGlow.BorderColor3 = Color3.fromRGB(0, 0, 0)
    MenuGlow.BorderSizePixel = 0
    MenuGlow.Position = UDim2.new(-0.047340557, 0, -0.0366644785, 0)
    MenuGlow.Size = UDim2.new(0, 513, 0, 623)
    MenuGlow.ZIndex = 0
    MenuGlow.Image = "rbxassetid://18245826428"
    MenuGlow.ImageColor3 = Color3.fromRGB(66, 255, 249)
    MenuGlow.ImageTransparency = 0.740
    MenuGlow.ScaleType = Enum.ScaleType.Slice
    MenuGlow.SliceCenter = Rect.new(21, 21, 79, 79)

    -- Store references
    Window.GUI = coresploit
    Window.Background = Background
    Window.TabsHolder = TabsHolder
    Library.GUI = coresploit
    
    -- Make draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    Library:CreateConnection(Background.InputBegan, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Background.Position
        end
    end)
    
    Library:CreateConnection(UserInputService.InputChanged, function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            Background.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    Library:CreateConnection(UserInputService.InputEnded, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Page functions
    function Window:CreatePage(config)
        local Page = {}
        Page.Name = config.Name or "Tab"
        Page.Window = Window
        Page.Sections = {}
        Page.Active = false
        
        -- Create tab button
        local title = Instance.new("TextLabel")
        local SelectedLine = Instance.new("Frame")
        local LineGlow = Instance.new("Frame")
        local UIGradient = Instance.new("UIGradient")
        
        title.Name = "title"
        title.Parent = TabsHolder
        title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        title.BackgroundTransparency = 1.000
        title.BorderColor3 = Color3.fromRGB(0, 0, 0)
        title.BorderSizePixel = 0
        title.Size = UDim2.new(0, 50, 0, 32)
        title.Font = Enum.Font.SourceSansSemibold
        title.Text = Page.Name
        title.TextColor3 = Color3.fromRGB(124, 121, 125)
        title.TextSize = 14.000
        
        SelectedLine.Name = "SelectedLine"
        SelectedLine.Parent = title
        SelectedLine.BackgroundColor3 = Color3.fromRGB(66, 255, 249)
        SelectedLine.BorderColor3 = Color3.fromRGB(0, 0, 0)
        SelectedLine.BorderSizePixel = 0
        SelectedLine.Position = UDim2.new(-0.0599999987, 0, 1, 0)
        SelectedLine.Size = UDim2.new(0, 55, 0, 2)
        SelectedLine.Visible = false
        
        LineGlow.Name = "LineGlow"
        LineGlow.Parent = title
        LineGlow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        LineGlow.BackgroundTransparency = 0.900
        LineGlow.BorderColor3 = Color3.fromRGB(0, 0, 0)
        LineGlow.BorderSizePixel = 0
        LineGlow.Position = UDim2.new(-0.0599999987, 0, -0.0220584869, 0)
        LineGlow.Size = UDim2.new(0, 55, 0, 32)
        LineGlow.Visible = false
        
        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(66, 255, 249)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(66, 255, 249))}
        UIGradient.Rotation = 90
        UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 1.00), NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
        UIGradient.Parent = LineGlow
        
        -- Create page content areas
        local Section1 = Instance.new("Frame")
        local Section2 = Instance.new("Frame")
        
        -- Section 1 (Left)
        Section1.Name = "Section1"
        Section1.Parent = Background
        Section1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Section1.BackgroundTransparency = 1.000
        Section1.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Section1.BorderSizePixel = 0
        Section1.Position = UDim2.new(0.0112055354, 0, 0.0730183199, 0)
        Section1.Size = UDim2.new(0, 225, 0, 420)
        Section1.Visible = false
        
        -- Section 2 (Right)
        Section2.Name = "Section2"
        Section2.Parent = Background
        Section2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Section2.BackgroundTransparency = 1.000
        Section2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Section2.BorderSizePixel = 0
        Section2.Position = UDim2.new(0.497872353, 4, 0.0730183199, 0)
        Section2.Size = UDim2.new(0, 225, 0, 420)
        Section2.Visible = false
        
        Page.Section1 = Section1
        Page.Section2 = Section2
        Page.TabButton = title
        Page.SelectedLine = SelectedLine
        Page.LineGlow = LineGlow
        
        -- Tab click handler
        Library:CreateConnection(title.InputBegan, function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                Window:SetPage(Page)
            end
        end)
        
        function Page:SetActive(active)
            Page.Active = active
            if active then
                title.TextColor3 = Color3.fromRGB(66, 255, 249)
                SelectedLine.Visible = true
                LineGlow.Visible = true
                Section1.Visible = true
                Section2.Visible = true
            else
                title.TextColor3 = Color3.fromRGB(124, 121, 125)
                SelectedLine.Visible = false
                LineGlow.Visible = false
                Section1.Visible = false
                Section2.Visible = false
            end
        end
        
        function Page:CreateSection(config)
            local Section = {}
            Section.Name = config.Name or "Section"
            Section.Side = config.Side or "left"
            Section.Page = Page
            Section.Elements = {}
            
            local parentFrame = Section.Side == "left" and Section1 or Section2
            
            -- Create section with your styling
            local SectionFrame = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local Title = Instance.new("Frame")
            local Roundingfiller = Instance.new("Frame")
            local UICorner_2 = Instance.new("UICorner")
            local TitleLabel = Instance.new("TextLabel")
            local SectionHolder = Instance.new("Frame")
            local UIListLayout = Instance.new("UIListLayout")
            
            SectionFrame.Name = "SectionFrame"
            SectionFrame.Parent = parentFrame
            SectionFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SectionFrame.BackgroundTransparency = 1.000
            SectionFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SectionFrame.BorderSizePixel = 0
            SectionFrame.Size = UDim2.new(1, 0, 0, 300)
            
            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = SectionFrame
            
            Title.Name = "Title"
            Title.Parent = SectionFrame
            Title.BackgroundColor3 = Color3.fromRGB(28, 28, 33)
            Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Title.BorderSizePixel = 0
            Title.Position = UDim2.new(0, 0, 0.0219435729, 0)
            Title.Size = UDim2.new(0, 225, 0, 15)
            
            Roundingfiller.Name = "Roundingfiller"
            Roundingfiller.Parent = Title
            Roundingfiller.BackgroundColor3 = Color3.fromRGB(28, 28, 33)
            Roundingfiller.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Roundingfiller.BorderSizePixel = 0
            Roundingfiller.Position = UDim2.new(0, 0, -0.666666687, 0)
            Roundingfiller.Size = UDim2.new(0, 225, 0, 10)
            
            UICorner_2.CornerRadius = UDim.new(0, 3)
            UICorner_2.Parent = Roundingfiller
            
            TitleLabel.Parent = Title
            TitleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TitleLabel.BackgroundTransparency = 1.000
            TitleLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
            TitleLabel.BorderSizePixel = 0
            TitleLabel.Position = UDim2.new(0.0279069766, 0, -0.466666669, 0)
            TitleLabel.Size = UDim2.new(0, 79, 0, 22)
            TitleLabel.Font = Enum.Font.SourceSansSemibold
            TitleLabel.Text = Section.Name
            TitleLabel.TextColor3 = Color3.fromRGB(66, 255, 249)
            TitleLabel.TextSize = 15.000
            TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            SectionHolder.Name = "SectionHolder"
            SectionHolder.Parent = SectionFrame
            SectionHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SectionHolder.BackgroundTransparency = 1.000
            SectionHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SectionHolder.BorderSizePixel = 0
            SectionHolder.Position = UDim2.new(0.0149999997, 0, 0.0877742916, 0)
            SectionHolder.Size = UDim2.new(0, 216, 0, 283)
            
            UIListLayout.Parent = SectionHolder
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 7)
            
            Section.Frame = SectionFrame
            Section.SectionHolder = SectionHolder
            
            -- Toggle Element
            function Section:CreateToggle(config)
                local Toggle = {}
                Toggle.Name = config.Name or "Toggle"
                Toggle.Default = config.Default or false
                Toggle.Flag = config.Flag or Toggle.Name
                Toggle.Callback = config.Callback or function() end
                Toggle.Value = Toggle.Default
                
                local ToggleButton = Instance.new("TextButton")
                local UICorner = Instance.new("UICorner")
                local title = Instance.new("TextLabel")
                local checkmark = Instance.new("ImageLabel")
                
                ToggleButton.Name = "ToggleButton"
                ToggleButton.Parent = SectionHolder
                ToggleButton.BackgroundColor3 = Toggle.Default and Color3.fromRGB(66, 255, 249) or Color3.fromRGB(255, 255, 255)
                ToggleButton.BackgroundTransparency = Toggle.Default and 0 or 1
                ToggleButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ToggleButton.BorderSizePixel = 0
                ToggleButton.Size = UDim2.new(0, 18, 0, 18)
                ToggleButton.ZIndex = 0
                ToggleButton.Font = Enum.Font.SourceSans
                ToggleButton.Text = ""
                ToggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
                ToggleButton.TextSize = 14.000
                
                UICorner.CornerRadius = UDim.new(0, 3)
                UICorner.Parent = ToggleButton
                
                title.Name = "title"
                title.Parent = ToggleButton
                title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                title.BackgroundTransparency = 1.000
                title.BorderColor3 = Color3.fromRGB(0, 0, 0)
                title.BorderSizePixel = 0
                title.Position = UDim2.new(1.46110022, 0, -0.055555556, 0)
                title.Size = UDim2.new(0, 188, 0, 20)
                title.Font = Enum.Font.SourceSansSemibold
                title.Text = Toggle.Name
                title.TextColor3 = Toggle.Default and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(124, 121, 125)
                title.TextSize = 15.000
                title.TextXAlignment = Enum.TextXAlignment.Left
                
                checkmark.Name = "checkmark"
                checkmark.Parent = ToggleButton
                checkmark.BackgroundTransparency = 1.000
                checkmark.BorderSizePixel = 0
                checkmark.Position = UDim2.new(0.111111112, 0, 0.111111112, 0)
                checkmark.Size = UDim2.new(0, 13, 0, 13)
                checkmark.Image = "http://www.roblox.com/asset/?id=6031094667"
                checkmark.ImageColor3 = Color3.fromRGB(0, 0, 0)
                checkmark.Visible = Toggle.Default
                
                function Toggle:SetValue(value)
                    Toggle.Value = value
                    Library.Flags[Toggle.Flag] = value
                    
                    if value then
                        ToggleButton.BackgroundColor3 = Color3.fromRGB(66, 255, 249)
                        ToggleButton.BackgroundTransparency = 0
                        title.TextColor3 = Color3.fromRGB(255, 255, 255)
                        checkmark.Visible = true
                    else
                        ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        ToggleButton.BackgroundTransparency = 1
                        title.TextColor3 = Color3.fromRGB(124, 121, 125)
                        checkmark.Visible = false
                    end
                    
                    Toggle.Callback(value)
                end
                
                Library:CreateConnection(ToggleButton.MouseButton1Click, function()
                    Toggle:SetValue(not Toggle.Value)
                end)
                
                Toggle:SetValue(Toggle.Default)
                return Toggle
            end
            
            -- Slider Element
            function Section:CreateSlider(config)
                local Slider = {}
                Slider.Name = config.Name or "Slider"
                Slider.Min = config.Min or 0
                Slider.Max = config.Max or 100
                Slider.Default = config.Default or 0
                Slider.Flag = config.Flag or Slider.Name
                Slider.Callback = config.Callback or function() end
                Slider.Value = Slider.Default
                
                local SliderFrame = Instance.new("TextLabel")
                local SliderBar = Instance.new("Frame")
                local Filler = Instance.new("Frame")
                local UICorner = Instance.new("UICorner")
                local SliderHead = Instance.new("TextButton")
                local UICorner_2 = Instance.new("UICorner")
                local SliderValue = Instance.new("TextBox")
                
                SliderFrame.Name = "Slider"
                SliderFrame.Parent = SectionHolder
                SliderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderFrame.BackgroundTransparency = 1.000
                SliderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                SliderFrame.BorderSizePixel = 0
                SliderFrame.Size = UDim2.new(0, 215, 0, 32)
                SliderFrame.Font = Enum.Font.SourceSansSemibold
                SliderFrame.Text = Slider.Name
                SliderFrame.TextColor3 = Color3.fromRGB(124, 121, 125)
                SliderFrame.TextSize = 15.000
                SliderFrame.TextXAlignment = Enum.TextXAlignment.Left
                SliderFrame.TextYAlignment = Enum.TextYAlignment.Top
                
                SliderBar.Name = "Slider"
                SliderBar.Parent = SliderFrame
                SliderBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderBar.BackgroundTransparency = 1.000
                SliderBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
                SliderBar.BorderSizePixel = 0
                SliderBar.Position = UDim2.new(0, 0, 0.800000012, 0)
                SliderBar.Size = UDim2.new(0, 214, 0, 2)
                
                Filler.Name = "Filler"
                Filler.Parent = SliderBar
                Filler.BackgroundColor3 = Color3.fromRGB(66, 255, 249)
                Filler.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Filler.BorderSizePixel = 0
                Filler.Position = UDim2.new(0, 0, -4, 7)
                Filler.Size = UDim2.new(0, 70, 0, 4)
                Filler.ZIndex = 2
                
                UICorner.CornerRadius = UDim.new(0, 2)
                UICorner.Parent = Filler
                
                SliderHead.Name = "SliderHead"
                SliderHead.Parent = Filler
                SliderHead.BackgroundColor3 = Color3.fromRGB(54, 54, 54)
                SliderHead.BorderColor3 = Color3.fromRGB(0, 0, 0)
                SliderHead.BorderSizePixel = 0
                SliderHead.Position = UDim2.new(0.899999976, 0, -0.75, 0)
                SliderHead.Size = UDim2.new(0, 10, 0, 10)
                SliderHead.Font = Enum.Font.SourceSans
                SliderHead.Text = ""
                SliderHead.TextColor3 = Color3.fromRGB(0, 0, 0)
                SliderHead.TextSize = 14.000
                
                UICorner_2.CornerRadius = UDim.new(1, 0)
                UICorner_2.Parent = SliderHead
                
                SliderValue.Name = "SliderValue"
                SliderValue.Parent = SliderFrame
                SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderValue.BackgroundTransparency = 1.000
                SliderValue.BorderColor3 = Color3.fromRGB(0, 0, 0)
                SliderValue.BorderSizePixel = 0
                SliderValue.Position = UDim2.new(0.764534891, 0, 0, 0)
                SliderValue.Size = UDim2.new(0, 50, 0, 19)
                SliderValue.Font = Enum.Font.SourceSansSemibold
                SliderValue.PlaceholderColor3 = Color3.fromRGB(111, 108, 112)
                SliderValue.PlaceholderText = tostring(Slider.Default)
                SliderValue.Text = ""
                SliderValue.TextColor3 = Color3.fromRGB(111, 108, 112)
                SliderValue.TextSize = 16.000
                SliderValue.TextXAlignment = Enum.TextXAlignment.Right
                
                function Slider:SetValue(value)
                    value = math.clamp(value, Slider.Min, Slider.Max)
                    Slider.Value = value
                    Library.Flags[Slider.Flag] = value
                    
                    local percent = (value - Slider.Min) / (Slider.Max - Slider.Min)
                    Filler.Size = UDim2.new(0, 214 * percent, 0, 4)
                    SliderValue.Text = tostring(value)
                    
                    Slider.Callback(value)
                end
                
                local dragging = false
                Library:CreateConnection(SliderHead.MouseButton1Down, function()
                    dragging = true
                end)
                
                Library:CreateConnection(UserInputService.InputEnded, function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)
                
                Library:CreateConnection(UserInputService.InputChanged, function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        local percent = math.clamp((Mouse.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
                        local value = Slider.Min + (Slider.Max - Slider.Min) * percent
                        Slider:SetValue(math.floor(value * 1000) / 1000)
                    end
                end)
                
                Library:CreateConnection(SliderValue.FocusLost, function()
                    local value = tonumber(SliderValue.Text)
                    if value then
                        Slider:SetValue(value)
                    end
                end)
                
                Slider:SetValue(Slider.Default)
                return Slider
            end
            
            -- Button Element
            function Section:CreateButton(config)
                local Button = {}
                Button.Name = config.Name or "Button"
                Button.Callback = config.Callback or function() end
                
                local ButtonFrame = Instance.new("TextButton")
                
                ButtonFrame.Name = "Button"
                ButtonFrame.Parent = SectionHolder
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ButtonFrame.BackgroundTransparency = 1.000
                ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ButtonFrame.BorderSizePixel = 0
                ButtonFrame.Size = UDim2.new(0, 100, 0, 30)
                ButtonFrame.Font = Enum.Font.SourceSansSemibold
                ButtonFrame.Text = Button.Name
                ButtonFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
                ButtonFrame.TextSize = 15.000
                
                Library:CreateConnection(ButtonFrame.MouseButton1Click, function()
                    Button.Callback()
                end)
                
                return Button
            end
            
            -- Label Element
            function Section:CreateLabel(config)
                local Label = {}
                Label.Name = config.Name or "Label"
                Label.Text = config.Text or Label.Name
                
                local LabelFrame = Instance.new("TextLabel")
                
                LabelFrame.Name = "Label"
                LabelFrame.Parent = SectionHolder
                LabelFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                LabelFrame.BackgroundTransparency = 1.000
                LabelFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                LabelFrame.BorderSizePixel = 0
                LabelFrame.Size = UDim2.new(0, 215, 0, 20)
                LabelFrame.Font = Enum.Font.SourceSansSemibold
                LabelFrame.Text = Label.Text
                LabelFrame.TextColor3 = Color3.fromRGB(111, 108, 112)
                LabelFrame.TextSize = 15.000
                
                function Label:SetText(text)
                    Label.Text = text
                    LabelFrame.Text = text
                end
                
                return Label
            end
            
            table.insert(Page.Sections, Section)
            return Section
        end
        
        table.insert(Window.Pages, Page)
        return Page
    end
    
    function Window:SetPage(page)
        if Window.CurrentPage then
            Window.CurrentPage:SetActive(false)
        end
        Window.CurrentPage = page
        page:SetActive(true)
    end
    
    -- Set first page as default
    spawn(function()
        wait(0.1)
        if #Window.Pages > 0 then
            Window:SetPage(Window.Pages[1])
        end
    end)
    
    return Window
end

function Library:Destroy()
    for _, connection in pairs(self.Connections) do
        connection:Disconnect()
    end
    if self.GUI then
        self.GUI:Destroy()
    end
end

return Library
